// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReserveResult_Result int32

const (
	ReserveResult_NONE     ReserveResult_Result = 0
	ReserveResult_RESERVED ReserveResult_Result = 1
)

var ReserveResult_Result_name = map[int32]string{
	0: "NONE",
	1: "RESERVED",
}

var ReserveResult_Result_value = map[string]int32{
	"NONE":     0,
	"RESERVED": 1,
}

func (x ReserveResult_Result) String() string {
	return proto.EnumName(ReserveResult_Result_name, int32(x))
}

func (ReserveResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0, 0}
}

type ConcurrencyControl_OnLimit int32

const (
	ConcurrencyControl_RETRY ConcurrencyControl_OnLimit = 0
	ConcurrencyControl_DROP  ConcurrencyControl_OnLimit = 1
)

var ConcurrencyControl_OnLimit_name = map[int32]string{
	0: "RETRY",
	1: "DROP",
}

var ConcurrencyControl_OnLimit_value = map[string]int32{
	"RETRY": 0,
	"DROP":  1,
}

func (x ConcurrencyControl_OnLimit) String() string {
	return proto.EnumName(ConcurrencyControl_OnLimit_name, int32(x))
}

func (ConcurrencyControl_OnLimit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4, 0}
}

type ReserveResult struct {
	Result               ReserveResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=types.ReserveResult_Result" json:"result,omitempty"`
	Job                  *Job                 `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReserveResult) Reset()         { *m = ReserveResult{} }
func (m *ReserveResult) String() string { return proto.CompactTextString(m) }
func (*ReserveResult) ProtoMessage()    {}
func (*ReserveResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *ReserveResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveResult.Unmarshal(m, b)
}
func (m *ReserveResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveResult.Marshal(b, m, deterministic)
}
func (m *ReserveResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveResult.Merge(m, src)
}
func (m *ReserveResult) XXX_Size() int {
	return xxx_messageInfo_ReserveResult.Size(m)
}
func (m *ReserveResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveResult proto.InternalMessageInfo

func (m *ReserveResult) GetResult() ReserveResult_Result {
	if m != nil {
		return m.Result
	}
	return ReserveResult_NONE
}

func (m *ReserveResult) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type JobId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobId) Reset()         { *m = JobId{} }
func (m *JobId) String() string { return proto.CompactTextString(m) }
func (*JobId) ProtoMessage()    {}
func (*JobId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *JobId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobId.Unmarshal(m, b)
}
func (m *JobId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobId.Marshal(b, m, deterministic)
}
func (m *JobId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobId.Merge(m, src)
}
func (m *JobId) XXX_Size() int {
	return xxx_messageInfo_JobId.Size(m)
}
func (m *JobId) XXX_DiscardUnknown() {
	xxx_messageInfo_JobId.DiscardUnknown(m)
}

var xxx_messageInfo_JobId proto.InternalMessageInfo

func (m *JobId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Job struct {
	Id                   *JobId   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Priority             int32    `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() *JobId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Job) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Job) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type QueuedJob struct {
	Job                  *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	EnqueuedAt           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=enqueued_at,json=enqueuedAt,proto3" json:"enqueued_at,omitempty"`
	Concurrency          *ConcurrencyControl  `protobuf:"bytes,3,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueuedJob) Reset()         { *m = QueuedJob{} }
func (m *QueuedJob) String() string { return proto.CompactTextString(m) }
func (*QueuedJob) ProtoMessage()    {}
func (*QueuedJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *QueuedJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueuedJob.Unmarshal(m, b)
}
func (m *QueuedJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueuedJob.Marshal(b, m, deterministic)
}
func (m *QueuedJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueuedJob.Merge(m, src)
}
func (m *QueuedJob) XXX_Size() int {
	return xxx_messageInfo_QueuedJob.Size(m)
}
func (m *QueuedJob) XXX_DiscardUnknown() {
	xxx_messageInfo_QueuedJob.DiscardUnknown(m)
}

var xxx_messageInfo_QueuedJob proto.InternalMessageInfo

func (m *QueuedJob) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *QueuedJob) GetEnqueuedAt() *timestamp.Timestamp {
	if m != nil {
		return m.EnqueuedAt
	}
	return nil
}

func (m *QueuedJob) GetConcurrency() *ConcurrencyControl {
	if m != nil {
		return m.Concurrency
	}
	return nil
}

type ConcurrencyControl struct {
	Key                  string                     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MaxConcurrency       int32                      `protobuf:"varint,2,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	OnLimit              ConcurrencyControl_OnLimit `protobuf:"varint,3,opt,name=on_limit,json=onLimit,proto3,enum=types.ConcurrencyControl_OnLimit" json:"on_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ConcurrencyControl) Reset()         { *m = ConcurrencyControl{} }
func (m *ConcurrencyControl) String() string { return proto.CompactTextString(m) }
func (*ConcurrencyControl) ProtoMessage()    {}
func (*ConcurrencyControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *ConcurrencyControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConcurrencyControl.Unmarshal(m, b)
}
func (m *ConcurrencyControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConcurrencyControl.Marshal(b, m, deterministic)
}
func (m *ConcurrencyControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConcurrencyControl.Merge(m, src)
}
func (m *ConcurrencyControl) XXX_Size() int {
	return xxx_messageInfo_ConcurrencyControl.Size(m)
}
func (m *ConcurrencyControl) XXX_DiscardUnknown() {
	xxx_messageInfo_ConcurrencyControl.DiscardUnknown(m)
}

var xxx_messageInfo_ConcurrencyControl proto.InternalMessageInfo

func (m *ConcurrencyControl) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConcurrencyControl) GetMaxConcurrency() int32 {
	if m != nil {
		return m.MaxConcurrency
	}
	return 0
}

func (m *ConcurrencyControl) GetOnLimit() ConcurrencyControl_OnLimit {
	if m != nil {
		return m.OnLimit
	}
	return ConcurrencyControl_RETRY
}

type JobEnqueueRequest struct {
	Priority             int32               `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	Payload              []byte              `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Concurrency          *ConcurrencyControl `protobuf:"bytes,3,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JobEnqueueRequest) Reset()         { *m = JobEnqueueRequest{} }
func (m *JobEnqueueRequest) String() string { return proto.CompactTextString(m) }
func (*JobEnqueueRequest) ProtoMessage()    {}
func (*JobEnqueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}

func (m *JobEnqueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobEnqueueRequest.Unmarshal(m, b)
}
func (m *JobEnqueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobEnqueueRequest.Marshal(b, m, deterministic)
}
func (m *JobEnqueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobEnqueueRequest.Merge(m, src)
}
func (m *JobEnqueueRequest) XXX_Size() int {
	return xxx_messageInfo_JobEnqueueRequest.Size(m)
}
func (m *JobEnqueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobEnqueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobEnqueueRequest proto.InternalMessageInfo

func (m *JobEnqueueRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *JobEnqueueRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *JobEnqueueRequest) GetConcurrency() *ConcurrencyControl {
	if m != nil {
		return m.Concurrency
	}
	return nil
}

func init() {
	proto.RegisterEnum("types.ReserveResult_Result", ReserveResult_Result_name, ReserveResult_Result_value)
	proto.RegisterEnum("types.ConcurrencyControl_OnLimit", ConcurrencyControl_OnLimit_name, ConcurrencyControl_OnLimit_value)
	proto.RegisterType((*ReserveResult)(nil), "types.ReserveResult")
	proto.RegisterType((*JobId)(nil), "types.JobId")
	proto.RegisterType((*Job)(nil), "types.Job")
	proto.RegisterType((*QueuedJob)(nil), "types.QueuedJob")
	proto.RegisterType((*ConcurrencyControl)(nil), "types.ConcurrencyControl")
	proto.RegisterType((*JobEnqueueRequest)(nil), "types.JobEnqueueRequest")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcf, 0x6f, 0xd3, 0x30,
	0x18, 0xad, 0x5b, 0xfa, 0xeb, 0x4b, 0x29, 0xc1, 0x42, 0x10, 0xb2, 0x09, 0x8a, 0x2f, 0xf4, 0x94,
	0xa1, 0xec, 0xc8, 0x0e, 0x4c, 0x5b, 0x0e, 0x8b, 0xd0, 0x0a, 0xde, 0x84, 0xb4, 0x53, 0x95, 0x1f,
	0x66, 0x0a, 0x4b, 0xe2, 0x2c, 0x71, 0xa6, 0xe5, 0x8e, 0xf8, 0x47, 0x38, 0xf3, 0x37, 0xf0, 0xaf,
	0x21, 0x3b, 0xe9, 0xda, 0xb0, 0xf5, 0xb4, 0x53, 0xec, 0xcf, 0xcf, 0xdf, 0x7b, 0xdf, 0x7b, 0x31,
	0x68, 0xa2, 0xca, 0x58, 0x61, 0x65, 0x39, 0x17, 0x1c, 0xf7, 0xd5, 0xc6, 0xdc, 0xb9, 0xe4, 0xfc,
	0x32, 0x66, 0x7b, 0xaa, 0xe8, 0x97, 0xdf, 0xf7, 0x58, 0x92, 0x89, 0xaa, 0xc6, 0x98, 0x6f, 0xff,
	0x3f, 0x14, 0x51, 0xc2, 0x0a, 0xe1, 0x25, 0x59, 0x0d, 0x20, 0x3f, 0x11, 0x3c, 0xa5, 0xac, 0x60,
	0xf9, 0x0d, 0xa3, 0xac, 0x28, 0x63, 0x81, 0xf7, 0x61, 0x90, 0xab, 0x95, 0x81, 0x66, 0x68, 0x3e,
	0xb5, 0x77, 0xac, 0x9a, 0xb4, 0x85, 0xb2, 0xea, 0x0f, 0x6d, 0xa0, 0x78, 0x17, 0x7a, 0x3f, 0xb8,
	0x6f, 0x74, 0x67, 0x68, 0xae, 0xd9, 0xd0, 0xdc, 0x70, 0xb9, 0x4f, 0x65, 0x99, 0xcc, 0x60, 0xd0,
	0x34, 0x1f, 0xc1, 0x93, 0xd3, 0xc5, 0xa9, 0xa3, 0x77, 0xf0, 0x04, 0x46, 0xd4, 0x39, 0x73, 0xe8,
	0x37, 0xe7, 0x58, 0x47, 0xe4, 0x15, 0xf4, 0x5d, 0xee, 0x9f, 0x84, 0x78, 0x0a, 0xdd, 0x28, 0x54,
	0xcc, 0x63, 0xda, 0x8d, 0x42, 0x72, 0x01, 0x3d, 0x97, 0xfb, 0x78, 0xf7, 0xae, 0xac, 0xd9, 0x93,
	0x75, 0xfb, 0x93, 0x50, 0x82, 0xb0, 0x09, 0xa3, 0x2c, 0x8f, 0x78, 0x1e, 0x89, 0x4a, 0x49, 0xe8,
	0xd3, 0xbb, 0x3d, 0x36, 0x60, 0x98, 0x79, 0x55, 0xcc, 0xbd, 0xd0, 0xe8, 0xcd, 0xd0, 0x7c, 0x42,
	0x57, 0x5b, 0xf2, 0x1b, 0xc1, 0xf8, 0x6b, 0xc9, 0x4a, 0x16, 0xd6, 0x0c, 0x6a, 0x02, 0xf4, 0xe0,
	0x04, 0xf8, 0x23, 0x68, 0x2c, 0xbd, 0x56, 0xe0, 0xa5, 0x27, 0x9a, 0x39, 0x4d, 0xab, 0x76, 0xd7,
	0x5a, 0xb9, 0x6b, 0x9d, 0xaf, 0xdc, 0xa5, 0xb0, 0x82, 0x1f, 0x0a, 0x79, 0x39, 0xe0, 0x69, 0x50,
	0xe6, 0x39, 0x4b, 0x83, 0x4a, 0xc9, 0xd0, 0xec, 0xd7, 0x0d, 0xc5, 0xd1, 0xfa, 0xe4, 0x88, 0xa7,
	0x22, 0xe7, 0x31, 0xdd, 0x44, 0x93, 0x3f, 0x08, 0xf0, 0x7d, 0x0c, 0xd6, 0xa1, 0x77, 0xc5, 0xaa,
	0xc6, 0x28, 0xb9, 0xc4, 0xef, 0xe1, 0x59, 0xe2, 0xdd, 0x2e, 0x37, 0x99, 0x6a, 0x2f, 0xa6, 0x89,
	0x77, 0xbb, 0xd1, 0x01, 0x1f, 0xc0, 0x88, 0xa7, 0xcb, 0x38, 0x4a, 0x22, 0xa1, 0xb4, 0x4c, 0xed,
	0x77, 0x5b, 0xb5, 0x58, 0x8b, 0xf4, 0xb3, 0x04, 0xd2, 0x21, 0xaf, 0x17, 0xe4, 0x0d, 0x0c, 0x9b,
	0x1a, 0x1e, 0x43, 0x9f, 0x3a, 0xe7, 0xf4, 0x42, 0xef, 0xc8, 0x5c, 0x8f, 0xe9, 0xe2, 0x8b, 0x8e,
	0xc8, 0x2f, 0x04, 0xcf, 0x5d, 0xee, 0x3b, 0xf5, 0xf8, 0x94, 0x5d, 0x97, 0xac, 0x10, 0xad, 0x84,
	0xd0, 0xf6, 0x84, 0xba, 0xad, 0x84, 0x1e, 0x65, 0x9c, 0xfd, 0x17, 0x81, 0xe6, 0x72, 0xbf, 0x38,
	0x63, 0xf9, 0x4d, 0x14, 0x30, 0xfc, 0x09, 0xa0, 0x11, 0x25, 0xe3, 0x36, 0xd6, 0x09, 0xb7, 0xa5,
	0x9a, 0x2f, 0xef, 0xa5, 0xea, 0xc8, 0x07, 0x45, 0x3a, 0xf8, 0x00, 0xa0, 0x79, 0x04, 0xb2, 0xc3,
	0x16, 0x9c, 0xf9, 0xe2, 0xa1, 0xf7, 0x42, 0x3a, 0xf8, 0x03, 0x0c, 0x0e, 0x83, 0x2b, 0x79, 0xb3,
	0xf5, 0x03, 0x6f, 0xe7, 0xf3, 0x07, 0xaa, 0xb2, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x20,
	0xc0, 0x43, 0xf6, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobsServiceClient is the client API for JobsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobsServiceClient interface {
	EnqueueJob(ctx context.Context, in *JobEnqueueRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReserveJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReserveResult, error)
	AckJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*empty.Empty, error)
}

type jobsServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobsServiceClient(cc *grpc.ClientConn) JobsServiceClient {
	return &jobsServiceClient{cc}
}

func (c *jobsServiceClient) EnqueueJob(ctx context.Context, in *JobEnqueueRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.JobsService/EnqueueJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) ReserveJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReserveResult, error) {
	out := new(ReserveResult)
	err := c.cc.Invoke(ctx, "/types.JobsService/ReserveJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) AckJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.JobsService/AckJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobsServiceServer is the server API for JobsService service.
type JobsServiceServer interface {
	EnqueueJob(context.Context, *JobEnqueueRequest) (*empty.Empty, error)
	ReserveJob(context.Context, *empty.Empty) (*ReserveResult, error)
	AckJob(context.Context, *JobId) (*empty.Empty, error)
}

func RegisterJobsServiceServer(s *grpc.Server, srv JobsServiceServer) {
	s.RegisterService(&_JobsService_serviceDesc, srv)
}

func _JobsService_EnqueueJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobEnqueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).EnqueueJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.JobsService/EnqueueJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).EnqueueJob(ctx, req.(*JobEnqueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_ReserveJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).ReserveJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.JobsService/ReserveJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).ReserveJob(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_AckJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).AckJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.JobsService/AckJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).AckJob(ctx, req.(*JobId))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.JobsService",
	HandlerType: (*JobsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnqueueJob",
			Handler:    _JobsService_EnqueueJob_Handler,
		},
		{
			MethodName: "ReserveJob",
			Handler:    _JobsService_ReserveJob_Handler,
		},
		{
			MethodName: "AckJob",
			Handler:    _JobsService_AckJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}
