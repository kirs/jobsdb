// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package types;

service JobsService {
  rpc EnqueueJob(JobEnqueueRequest) returns (google.protobuf.Empty) {}
  rpc ReserveJob(google.protobuf.Empty) returns (ReserveResult) {}
  rpc AckJob(JobId) returns (google.protobuf.Empty) {}
}

message ReserveResult {
  enum Result {
    NONE = 0;
    RESERVED = 1;
  }
  Result result = 1;
  Job job = 2;
}

message JobId {
  string id = 1;
}

message Job {
  JobId id = 1;
  int32 priority = 2;
  bytes payload = 3;
}

message QueuedJob {
  Job job = 1;
  google.protobuf.Timestamp enqueued_at = 2;
  ConcurrencyControl concurrency = 3;
}

message ConcurrencyControl {
  string key = 1;
  int32 max_concurrency = 2;
  enum OnLimit {
      RETRY = 0;
      DROP = 1;
  }
  OnLimit on_limit = 3;
}

message JobEnqueueRequest {
  int32 priority = 1;
  bytes payload = 2;
  ConcurrencyControl concurrency = 3;
}



